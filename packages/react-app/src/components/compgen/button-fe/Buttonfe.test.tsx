import React from 'react';
import { render, screen, fireEvent } from '@testing-library/react';
import '@testing-library/jest-dom';
import buttonFeButton from './buttonfe-button.component';

/**
 * buttonFe Button Component Tests
 * Generated by CompGen CLI on 2025-10-01T16:49:30.406Z
 * @author CompGen
 */

describe('buttonFeButton', () => {
  it('renders with default props', () => {
    render(<buttonFeButton>Click me</buttonFeButton>);
    const button = screen.getByRole('button');
    expect(button).toBeInTheDocument();
    expect(button).toHaveTextContent('Click me');
  });

  it('applies correct variant classes', () => {
    render(<buttonFeButton variant="primary">Primary</buttonFeButton>);
    const button = screen.getByRole('button');
    expect(button).toHaveClass('btn-primary');
  });

  it('applies correct size classes', () => {
    render(<buttonFeButton size="large">Large</buttonFeButton>);
    const button = screen.getByRole('button');
    expect(button).toHaveClass('btn-large');
  });

  it('applies full width when specified', () => {
    render(<buttonFeButton fullWidth>Full Width</buttonFeButton>);
    const button = screen.getByRole('button');
    expect(button).toHaveClass('btn-full-width');
  });

  it('shows loading spinner when loading', () => {
    render(<buttonFeButton loading>Loading</buttonFeButton>);
    const button = screen.getByRole('button');
    expect(button).toBeDisabled();
    expect(button.querySelector('.loading-spinner')).toBeInTheDocument();
  });

  it('is disabled when disabled prop is true', () => {
    render(<buttonFeButton disabled>Disabled</buttonFeButton>);
    const button = screen.getByRole('button');
    expect(button).toBeDisabled();
  });

  it('handles click events', () => {
    const handleClick = jest.fn();
    render(<buttonFeButton onClick={handleClick}>Click me</buttonFeButton>);
    const button = screen.getByRole('button');
    fireEvent.click(button);
    expect(handleClick).toHaveBeenCalledTimes(1);
  });
});
